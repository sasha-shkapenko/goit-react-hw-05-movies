{"version":3,"file":"static/js/936.9ae830cb.chunk.js","mappings":"8LACA,EAAuB,wBAAvB,EAAsD,wB,SCiBtD,EAZkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACXC,GAAWC,EAAAA,EAAAA,MAEjB,OAAQ,eAAIC,UAAWC,EAAf,SACHJ,EAAOK,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACrB,OAAQ,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAeI,MAAO,CAAEC,KAAMV,GAAYE,UAAWC,EAA1E,UACHI,GAASA,EACTD,GAAQA,IAF2BD,U,uHCVpD,EAAwB,oB,SCoBxB,EAfa,WACT,OAA4BM,EAAAA,EAAAA,UAAS,MAArC,eAAOZ,EAAP,KAAea,EAAf,KAOA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MACKC,MAAK,SAAAC,GAAO,OAAIJ,GAAU,OAAII,OAC9BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QACjC,KAGC,6BACI,eAAIhB,UAAWC,EAAf,6BACCJ,IAAU,SAACsB,EAAA,EAAD,CAAWtB,OAAQA,S,0MCf1CuB,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHT,EAAW,mCAAG,oGACLQ,IAAAA,IAAA,qCAAwCC,IADnC,cACjBC,EADiB,yBAEhBA,EAAIC,KAAKT,SAFO,2CAAH,qDAIXU,EAAY,mCAAG,WAAOrB,GAAP,uFACNiB,IAAAA,IAAA,gBAAmBjB,EAAnB,oBAAiCkB,EAAjC,oBADM,cAClBC,EADkB,yBAEjBA,EAAIC,MAFa,2CAAH,sDAKZE,EAAO,mCAAG,WAAOtB,GAAP,uFACDiB,IAAAA,IAAA,iBAAoBjB,EAApB,4BAA0CkB,EAA1C,oBADC,cACbC,EADa,yBAEZA,EAAIC,KAAKG,MAFG,2CAAH,sDAKPC,EAAU,mCAAG,WAAOxB,GAAP,uFACJiB,IAAAA,IAAA,iBAAoBjB,EAApB,4BAA0CkB,EAA1C,2BADI,cAChBC,EADgB,yBAEfA,EAAIC,KAAKT,SAFM,2CAAH,sDAKVc,EAAiB,mCAAG,WAAOC,GAAP,uFACXT,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDQ,IADzC,cACvBP,EADuB,yBAEtBA,EAAIC,KAAKT,SAFa,2CAAH,uD,+ECpBf,SAASgB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMxB,KAAK2B,GFInF,CAAgBJ,KAAQ,EAAAO,EAAA,GAA2BP,IGLvE,WACb,MAAM,IAAIQ,UAAU,wIHIwE","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"item\":\"MovieList_item__tDivI\"};","import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from \"react-router-dom\";\nimport s from './MovieList.module.css'\n\n\nconst MovieList = ({ movies }) => {\n    const location = useLocation();\n\n    return (<ul className={s.list}>\n        {movies.map(({ id, name, title }) => {\n            return (<Link to={`/movies/${id}`} key={id} state={{ from: location }} className={s.item}>\n                {title && title}\n                {name && name}\n            </Link>)\n        })}\n    </ul>)\n}\nexport default MovieList;\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            name: PropTypes.string,\n            title: PropTypes.string,\n        })\n    ),\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\"};","import { useState, useEffect } from 'react';\nimport { getTrending } from '../../services/api';\n\nimport MovieList from 'components/MovieList/MovieList';\nimport s from './Home.module.css';\n\nconst Home = () => {\n    const [movies, setMovies] = useState(null);\n    useEffect(() => {\n        getTrending()\n            .then(results => setMovies([...results]))\n            .catch(error => console.log(error));\n    }, []);\n\n    return (\n        <main>\n            <h1 className={s.title}>Trending movies</h1>\n            {movies && <MovieList movies={movies} />}\n        </main>\n    );\n};\nexport default Home;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f8a2c74c619ae47b0575baa7c8b50025';\n\nexport const getTrending = async () => {\n    const res = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n    return res.data.results;\n};\nexport const getMovieInfo = async (id) => {\n    const res = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return res.data;\n}\n\nexport const getCast = async (id) => {\n    const res = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return res.data.cast;\n}\n\nexport const getReviews = async (id) => {\n    const res = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return res.data.results;\n}\n\nexport const getSearchedMovies = async (query) => {\n    const res = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n    return res.data.results;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["movies","location","useLocation","className","s","map","id","name","title","to","state","from","useState","setMovies","useEffect","getTrending","then","results","catch","error","console","log","MovieList","axios","API_KEY","res","data","getMovieInfo","getCast","cast","getReviews","getSearchedMovies","query","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}