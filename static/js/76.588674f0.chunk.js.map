{"version":3,"file":"static/js/76.588674f0.chunk.js","mappings":"wOACA,GAAgB,KAAO,mBAAmB,KAAO,mBAAmB,IAAM,kBAAkB,UAAY,yB,SCkCxG,EA7Ba,WACT,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAQN,GAASO,KAAKH,KACvB,CAACJ,IAGAG,IACC,eAAIK,UAAWC,EAAAA,KAAf,SACIN,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,UAAWC,EAAjC,EAAiCA,aAAjC,OACN,gBAAaN,UAAWC,EAAAA,KAAxB,WACI,gBACIM,IACID,EAAY,0CAC6BA,GACnCE,EAEVR,UAAWC,EAAAA,IACXQ,MAAO,IACPC,OAAQ,IACRC,IAAKP,KAET,cAAGJ,UAAWC,EAAAA,KAAd,SAAuBG,KACvB,eAAGJ,UAAWC,EAAAA,UAAd,uBAAsCI,OAbjCF,U,0MCfzBS,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACLF,IAAAA,IAAA,qCAAwCC,IADnC,cACjBE,EADiB,yBAEhBA,EAAIC,KAAKC,SAFO,2CAAH,qDAIXC,EAAY,mCAAG,WAAOf,GAAP,uFACNS,IAAAA,IAAA,gBAAmBT,EAAnB,oBAAiCU,EAAjC,oBADM,cAClBE,EADkB,yBAEjBA,EAAIC,MAFa,2CAAH,sDAKZlB,EAAO,mCAAG,WAAOK,GAAP,uFACDS,IAAAA,IAAA,iBAAoBT,EAApB,4BAA0CU,EAA1C,oBADC,cACbE,EADa,yBAEZA,EAAIC,KAAKrB,MAFG,2CAAH,sDAKPwB,EAAU,mCAAG,WAAOhB,GAAP,uFACJS,IAAAA,IAAA,iBAAoBT,EAApB,4BAA0CU,EAA1C,2BADI,cAChBE,EADgB,yBAEfA,EAAIC,KAAKC,SAFM,2CAAH,sDAKVG,EAAiB,mCAAG,WAAOC,GAAP,uFACXT,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDQ,IADzC,cACvBN,EADuB,yBAEtBA,EAAIC,KAAKC,SAFa,2CAAH,uD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"img\":\"Cast_img__-isbW\",\"character\":\"Cast_character__tKDlA\"};","import { getCast } from \"services/api\";\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport placeholderImg from '../../images/user-icon-placeholder-1.png'\nimport s from './Cast.module.css';\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n    useEffect(() => {\n        getCast(movieId).then(setCast);\n    }, [movieId])\n\n    return (\n        cast &&\n        (<ul className={s.list}>\n            {cast.map(({ id, original_name, character, profile_path }) => (\n                <li key={id} className={s.item}>\n                    <img\n                        src={\n                            profile_path\n                                ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n                                : placeholderImg\n                        }\n                        className={s.img}\n                        width={300}\n                        height={450}\n                        alt={original_name}\n                    />\n                    <p className={s.name}>{original_name}</p>\n                    <p className={s.character}>Charater: {character}</p>\n                </li>\n            ))}\n        </ul>));\n}\nexport default Cast;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f8a2c74c619ae47b0575baa7c8b50025';\n\nexport const getTrending = async () => {\n    const res = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n    return res.data.results;\n};\nexport const getMovieInfo = async (id) => {\n    const res = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return res.data;\n}\n\nexport const getCast = async (id) => {\n    const res = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return res.data.cast;\n}\n\nexport const getReviews = async (id) => {\n    const res = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return res.data.results;\n}\n\nexport const getSearchedMovies = async (query) => {\n    const res = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n    return res.data.results;\n}"],"names":["movieId","useParams","useState","cast","setCast","useEffect","getCast","then","className","s","map","id","original_name","character","profile_path","src","placeholderImg","width","height","alt","axios","API_KEY","getTrending","res","data","results","getMovieInfo","getReviews","getSearchedMovies","query"],"sourceRoot":""}